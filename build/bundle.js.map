{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/scripts/app/database/DatabaseData.ts","../../src/scripts/app/database/DatabaseOrderer.ts","../../src/scripts/app/database/DatabaseQuery.ts","../../src/scripts/app/database/Database.ts","../../src/scripts/utils/JSONParser.ts","../../node_modules/marked/lib/marked.esm.js","../../node_modules/dompurify/dist/purify.cjs.js","../../src/scripts/app/database/DatabaseQuerySanitizer.ts","../../src/app/DatabaseQuery/DatabaseQueryResult.svelte","../../src/app/DatabaseQuery/DatabaseQueryPageSelect.svelte","../../src/app/DatabaseQuery/DatabaseQueryResults.svelte","../../src/app/DatabaseSearch.svelte","../../src/scripts/app/modal/ModalHandler.ts","../../src/app/DatabaseTitle.svelte","../../src/app/FAQ/FAQModal.svelte","../../src/app/Main.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default class DatabaseData {\r\n    static initialize() {\r\n        if (this.headers.length != 0) { //initialized\r\n            return this.getQueryList();\r\n        }\r\n        for (let queryType of this.comprehensiveHeaders) {\r\n            let finalQueryType = \"\";\r\n            if (typeof queryType != typeof \"\") {\r\n                finalQueryType = queryType[0];\r\n            }\r\n            else {\r\n                finalQueryType = queryType;\r\n            }\r\n            this.headers.push(finalQueryType);\r\n        }\r\n        return this.getQueryList();\r\n    }\r\n    static getQueryList() {\r\n        let queryList = {};\r\n        for (let queryType of this.headers) {\r\n            queryList[queryType] = \"\";\r\n        }\r\n        return queryList;\r\n    }\r\n}\r\nDatabaseData.headers = [];\r\nDatabaseData.comprehensiveHeaders = [\"Demographics\",\r\n    \"Intended Major\",\r\n    \"Academics\",\r\n    \"Standardized Testing\",\r\n    \"Extracurriculars\",\r\n    \"Awards\",\r\n    [\"Letters of Recommendation\",\r\n        \"LOR\"],\r\n    \"Interviews\",\r\n    \"Essays\",\r\n    \"Acceptances\",\r\n    \"Waitlists\",\r\n    \"Rejections\",\r\n    \"Additional Information\"];\r\n","import DatabaseData from \"./DatabaseData\";\r\n//TODO: Merge different values of the same header into one\r\nexport default class DatabaseOrderer {\r\n    static orderDB(db) {\r\n        let dbArray = db[\"db\"];\r\n        let orderedDB = [];\r\n        //iterate over the dbArray\r\n        for (let i = 0; i < dbArray.length; i++) {\r\n            let dbObject = dbArray[i];\r\n            let tabulatedPost = DatabaseOrderer.tabulatePost(dbObject[\"selftext\"]);\r\n            //delete dbObject[\"selftext\"];\r\n            dbObject[\"tabulatedtext\"] = tabulatedPost;\r\n            dbObject[\"lowerselftext\"] = dbObject[\"selftext\"].toLowerCase();\r\n            orderedDB.push(dbObject);\r\n        }\r\n        return orderedDB;\r\n    }\r\n    static getHeader(detectedPost) {\r\n        for (let i = 0; i < detectedPost.length; i++) {\r\n            if (detectedPost[i] == '#') {\r\n                return [detectedPost.substring(0, i), detectedPost.substring(i + 1)];\r\n            }\r\n        }\r\n        return \"Undetected\";\r\n    }\r\n    static tabulatePost(postArg) {\r\n        let post = \"Introduction#\" + postArg;\r\n        //post is a string of the form:\r\n        let posts = [];\r\n        let headers = DatabaseData.comprehensiveHeaders;\r\n        //iterate over the headers and split the post into an array of strings\r\n        let detectedHeaders = [];\r\n        for (let header of headers) {\r\n            if (typeof header == \"string\") {\r\n                //split the post based on the header and add it to posts\r\n                if (post.includes(header)) {\r\n                    detectedHeaders.push(header);\r\n                    post = post.replaceAll(header, \"$p3ww5l9JHgL7lHG6z5w6Xsreas3Zo3$\" + header + \"#\"); //random hash delimiter\r\n                }\r\n            }\r\n            else {\r\n                for (let subheader of header) {\r\n                    if (post.includes(subheader)) {\r\n                        detectedHeaders.push(header[0]);\r\n                        post = post.replaceAll(subheader, \"$p3ww5l9JHgL7lHG6z5w6Xsreas3Zo3$\" + header[0] + \"#\"); //random hash delimiter\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        posts = post.split(\"$p3ww5l9JHgL7lHG6z5w6Xsreas3Zo3$\");\r\n        //convert the array of strings to an array of objects\r\n        let postObjects = [];\r\n        for (let i = 0; i < posts.length; i++) {\r\n            let postArray = this.getHeader(posts[i]);\r\n            if (postArray[0] == \"U\") {\r\n                //something clearly went wrong\r\n                continue;\r\n            }\r\n            postObjects.push({\r\n                header: postArray[0],\r\n                data: postArray[1].toLowerCase()\r\n            });\r\n        }\r\n        return postObjects;\r\n    }\r\n}\r\n","import DatabaseData from \"./DatabaseData\";\r\nexport default class DatabaseQuery {\r\n    static subscribe(subscriber) {\r\n        this.subscribers.push(subscriber);\r\n    }\r\n    static update() {\r\n        for (let subscriber of this.subscribers) {\r\n            subscriber.update();\r\n        }\r\n    }\r\n    static queryDB(totalQuery, queryList) {\r\n        this.queryResult = DatabaseData.db;\r\n        console.log(\"queryList\", queryList);\r\n        if (this.queryResult == undefined) {\r\n            return;\r\n        }\r\n        for (let queryType of DatabaseData.headers) {\r\n            let queryString = queryList[queryType];\r\n            this.refineQueryComma(queryType, queryString);\r\n        }\r\n        this.refineQueryAllComma(totalQuery);\r\n        console.log(this.queryResult);\r\n        this.update();\r\n    }\r\n    static sanitizedQueries(queryString) {\r\n        let queries = queryString.split(\",\");\r\n        //if any query ends in a backslash, merge it with the next one\r\n        for (let i = 0; i < queries.length - 1; i++) {\r\n            if (queries[i].endsWith(\"\\\\\")) {\r\n                queries[i] = queries[i].substring(0, queries[i].length - 1) + \",\" + queries[i + 1];\r\n                queries.splice(i + 1, 1);\r\n            }\r\n        }\r\n        for (let i = 0; i < queries.length; i++) {\r\n            queries[i] = queries[i].trim();\r\n        }\r\n        //if first and last characters of a query are quotes, remove them\r\n        for (let i = 0; i < queries.length; i++) {\r\n            if (queries[i].startsWith(\"\\\"\") && queries[i].endsWith(\"\\\"\")) {\r\n                queries[i] = queries[i].substring(1, queries[i].length - 1);\r\n            }\r\n        }\r\n        //remove all backslashes except backslashes directly after a backslash\r\n        for (let i = 0; i < queries.length; i++) {\r\n            let query = queries[i];\r\n            let queryLength = query.length;\r\n            for (let j = 0; j < queryLength; j++) {\r\n                if (query[j] == \"\\\\\") {\r\n                    query = query.substring(0, j) + query.substring(j + 1);\r\n                    queryLength--;\r\n                }\r\n            }\r\n            queries[i] = query;\r\n        }\r\n        return queries;\r\n    }\r\n    static refineQueryComma(queryType, queryString) {\r\n        let queries = this.sanitizedQueries(queryString);\r\n        for (let query of queries) {\r\n            this.refineQuery(queryType, query);\r\n        }\r\n    }\r\n    static refineQueryAllComma(queryString) {\r\n        let queries = this.sanitizedQueries(queryString);\r\n        for (let query of queries) {\r\n            this.refineQueryAll(query);\r\n        }\r\n    }\r\n    static refineQuery(queryType, query) {\r\n        let refinedQueryResult = [];\r\n        if (query == \"\") {\r\n            return;\r\n        }\r\n        for (let post of this.queryResult) {\r\n            let tabulatedPost = post[\"tabulatedtext\"];\r\n            for (let datapoint of tabulatedPost) {\r\n                if (datapoint[\"header\"] == queryType) {\r\n                    if (datapoint[\"data\"].includes(query.toLowerCase())) {\r\n                        refinedQueryResult.push(post);\r\n                    }\r\n                    break; //supposedly this works?\r\n                }\r\n            }\r\n        }\r\n        this.queryResult = refinedQueryResult;\r\n    }\r\n    static refineQueryAll(query) {\r\n        let refinedQueryResult = [];\r\n        if (query == \"\") {\r\n            return this.queryResult;\r\n        }\r\n        for (let post of this.queryResult) {\r\n            let allPostData = post[\"lowerselftext\"];\r\n            if (allPostData.includes(query.toLowerCase())) {\r\n                refinedQueryResult.push(post);\r\n            }\r\n        }\r\n        this.queryResult = refinedQueryResult;\r\n    }\r\n}\r\nDatabaseQuery.subscribers = [];\r\n","import DatabaseData from \"./DatabaseData\";\r\nimport DatabaseOrderer from \"./DatabaseOrderer\";\r\nimport JSONParser from \"../../utils/JSONParser\";\r\nimport DatabaseQuery from \"./DatabaseQuery\";\r\nexport default class Database {\r\n    static initialize() {\r\n        return DatabaseData.initialize();\r\n    }\r\n    static importDatabase(filePath) {\r\n        let dbPromise = JSONParser.importJSON(filePath);\r\n        dbPromise.then(function (db) {\r\n            let orderedDb = DatabaseOrderer.orderDB(db);\r\n            DatabaseData.db = orderedDb;\r\n        }).catch(e => console.log(e.name));\r\n    }\r\n    static queryDB(totalQuery, queryList) {\r\n        DatabaseQuery.queryDB(totalQuery, queryList);\r\n    }\r\n    static getQueryResult() {\r\n        return DatabaseQuery.queryResult;\r\n    }\r\n    static subscribeQuery(subscriber) {\r\n        DatabaseQuery.subscribe(subscriber);\r\n    }\r\n}\r\n","export default class JSONParser {\r\n    //use fetch to import json file\r\n    static importJSON(filePath) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(filePath)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                resolve(data);\r\n            })\r\n                .catch(error => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n}\r\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text, [])\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^( {0,${Math.min(3, indent - 1)}})(\\`\\`\\`|~~~)`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (this.rules.block.heading.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        token.type = 'paragraph';\n        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.tokens = [];\n        this.lexer.inline(token.text, token.tokens);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = [];\n          this.lexer.inline(item.header[j].text, item.header[j].tokens);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = [];\n            this.lexer.inline(row[k].text, row[k].tokens);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const token = {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const token = {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text, [])\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2], [])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens) {\n    this.inlineQueue.push({ src, tokens });\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        pack.walkTokens.call(this, token);\n        if (walkTokens) {\n          walkTokens.call(this, token);\n        }\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback.call(marked, token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          marked.walkTokens(cell.tokens, callback);\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            marked.walkTokens(cell.tokens, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            marked.walkTokens(token[childTokens], callback);\n          });\n        } else if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","/*! @license DOMPurify 2.3.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.6/LICENSE */\n\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar hasOwnProperty = Object.hasOwnProperty,\n    setPrototypeOf = Object.setPrototypeOf,\n    isFrozen = Object.isFrozen,\n    getPrototypeOf = Object.getPrototypeOf,\n    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar freeze = Object.freeze,\n    seal = Object.seal,\n    create = Object.create; // eslint-disable-line import/no-mutable-exports\n\nvar _ref = typeof Reflect !== 'undefined' && Reflect,\n    apply = _ref.apply,\n    construct = _ref.construct;\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n  };\n}\n\nvar arrayForEach = unapply(Array.prototype.forEach);\nvar arrayPop = unapply(Array.prototype.pop);\nvar arrayPush = unapply(Array.prototype.push);\n\nvar stringToLowerCase = unapply(String.prototype.toLowerCase);\nvar stringMatch = unapply(String.prototype.match);\nvar stringReplace = unapply(String.prototype.replace);\nvar stringIndexOf = unapply(String.prototype.indexOf);\nvar stringTrim = unapply(String.prototype.trim);\n\nvar regExpTest = unapply(RegExp.prototype.test);\n\nvar typeErrorCreate = unconstruct(TypeError);\n\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\n\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return construct(func, args);\n  };\n}\n\n/* Add properties to a lookup table */\nfunction addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  var l = array.length;\n  while (l--) {\n    var element = array[l];\n    if (typeof element === 'string') {\n      var lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nfunction clone(object) {\n  var newObject = create(null);\n\n  var property = void 0;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    var desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nvar html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nvar svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n\nvar svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nvar svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n\nvar mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nvar mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n\nvar text = freeze(['#text']);\n\nvar html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n\nvar svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\nvar mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\nvar xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nvar MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nvar ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nvar DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nvar ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nvar IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nvar IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nvar ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nvar DOCTYPE_NAME = seal(/^html$/i);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nvar _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n  if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  var suffix = null;\n  var ATTR_NAME = 'data-tt-policy-suffix';\n  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML: function createHTML(html$$1) {\n        return html$$1;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  var DOMPurify = function DOMPurify(root) {\n    return createDOMPurify(root);\n  };\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '2.3.6';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  var originalDocument = window.document;\n\n  var document = window.document;\n  var DocumentFragment = window.DocumentFragment,\n      HTMLTemplateElement = window.HTMLTemplateElement,\n      Node = window.Node,\n      Element = window.Element,\n      NodeFilter = window.NodeFilter,\n      _window$NamedNodeMap = window.NamedNodeMap,\n      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n      HTMLFormElement = window.HTMLFormElement,\n      DOMParser = window.DOMParser,\n      trustedTypes = window.trustedTypes;\n\n\n  var ElementPrototype = Element.prototype;\n\n  var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  var getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n  var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  var _document = document,\n      implementation = _document.implementation,\n      createNodeIterator = _document.createNodeIterator,\n      createDocumentFragment = _document.createDocumentFragment,\n      getElementsByTagName = _document.getElementsByTagName;\n  var importNode = originalDocument.importNode;\n\n\n  var documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  var hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n\n  var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n      ERB_EXPR$$1 = ERB_EXPR,\n      DATA_ATTR$$1 = DATA_ATTR,\n      ARIA_ATTR$$1 = ARIA_ATTR,\n      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n  var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  var ALLOWED_TAGS = null;\n  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n  /* Allowed attribute names */\n  var ALLOWED_ATTR = null;\n  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  var FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  var FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  var ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  var ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  var SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  var WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  var SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  var FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  var RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  var RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  var RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  var SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  var KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  var IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  var USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  var FORBID_CONTENTS = null;\n  var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n  /* Tags that are safe for data: URIs */\n  var DATA_URI_TAGS = null;\n  var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  var URI_SAFE_ATTRIBUTES = null;\n  var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n  var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  var NAMESPACE = HTML_NAMESPACE;\n  var IS_EMPTY_INPUT = false;\n\n  /* Parsing of strict XHTML documents */\n  var PARSER_MEDIA_TYPE = void 0;\n  var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  var transformCaseFunc = void 0;\n\n  /* Keep a reference to config to pass to hooks */\n  var CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n\n  var isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  var _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? function (x) {\n      return x;\n    } : stringToLowerCase;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html);\n        addToSet(ALLOWED_ATTR, html$1);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl);\n        addToSet(ALLOWED_ATTR, mathMl$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n\n  var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  var ALL_SVG_TAGS = addToSet({}, svg);\n  addToSet(ALL_SVG_TAGS, svgFilters);\n  addToSet(ALL_SVG_TAGS, svgDisallowed);\n\n  var ALL_MATHML_TAGS = addToSet({}, mathMl);\n  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  var _checkValidNamespace = function _checkValidNamespace(element) {\n    var parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template'\n      };\n    }\n\n    var tagName = stringToLowerCase(element.tagName);\n    var parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erronously deleted from\n      // HTML namespace.\n      var commonSvgAndHTMLElements = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  var _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  var _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc = void 0;\n    var leadingWhitespace = void 0;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n\n    var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    var body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  var _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function');\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  var _isNode = function _isNode(object) {\n    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var content = void 0;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    var tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          var childCount = childNodes.length;\n\n          for (var i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n      content = stringReplace(content, ERB_EXPR$$1, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  var _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr = void 0;\n    var value = void 0;\n    var lcName = void 0;\n    var l = void 0;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    var attributes = currentNode.attributes;\n\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    var hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      var _attr = attr,\n          name = _attr.name,\n          namespaceURI = _attr.namespaceURI;\n\n      value = stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n        value = stringReplace(value, ERB_EXPR$$1, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      var lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode = void 0;\n    var shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    var body = void 0;\n    var importedNode = void 0;\n    var currentNode = void 0;\n    var oldNode = void 0;\n    var returnNode = void 0;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        var tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    var lcTag = transformCaseFunc(tag);\n    var lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nmodule.exports = purify;\n//# sourceMappingURL=purify.cjs.js.map\n","import * as marked from \"marked\";\r\nimport * as DOMPurify from \"dompurify\";\r\nexport default class DatabaseQuerySanitizer {\r\n    static sanitizeTitle(title) {\r\n        return DOMPurify.sanitize(title);\r\n    }\r\n    static sanitizeText(text) {\r\n        return DOMPurify.sanitize(marked.parse(text));\r\n    }\r\n}\r\n","<script>\r\n    import DatabaseQuerySanitizer from \"../../scripts/app/database/DatabaseQuerySanitizer\";\r\n    import Database from \"../../scripts/app/database/Database\";\r\n    export let title;\r\n    export let link;\r\n    export let selftext;\r\n    let opened = false;\r\n    function toggle(){\r\n        opened = !opened;\r\n    }\r\n    function update(){\r\n        opened = false; \r\n    }\r\n    Database.subscribeQuery({update});\r\n</script>\r\n\r\n<div class = \"resultBoxContainer\">\r\n    <div class = \"resultBox\">\r\n        <div class = \"titleResultBox\">\r\n            <span class = \"titleText\">{DatabaseQuerySanitizer.sanitizeTitle(title)}</span>\r\n            <svg on:click = {toggle} class = \"triangle triangle-{opened}\" width=\"40\" height=\"40\">\r\n                <polygon points=\"0,0 0,40 40,20\"/>\r\n        </div>\r\n        <div class = bodyText-{opened}>\r\n            <div class = whiteLine/>\r\n            <a href = {link} target=\"_blank\">Original Reddit Post</a>\r\n            <div class = whiteLine style=\"height:1.5px\"/>\r\n            <!--Extremely dangerous, but preliminary sanitization is done-->\r\n            {@html DatabaseQuerySanitizer.sanitizeText(selftext)}\r\n        </div>\r\n    </div> \r\n    <!--an svg of a black triangle pointing right-->\r\n    \r\n</div>\r\n\r\n\r\n<style type=\"text/scss\">\r\n    a{\r\n        text-decoration: underline;\r\n    }\r\n    a:hover{\r\n        text-decoration: none;\r\n    }\r\n    .whiteLine{\r\n        width: calc(100% + 2.1rem);\r\n        margin-left: -1.1rem;\r\n        height: 1px;\r\n        background-color: white;\r\n        margin-top: 0.75rem; margin-bottom: 0.5rem;\r\n    }\r\n    .bodyText-true{\r\n        margin-bottom: 1rem;\r\n    }\r\n    .bodyText-false{\r\n        display: none;\r\n    }\r\n    .titleText{\r\n        flex: 0 2 auto;\r\n        max-width: calc(100% - 4rem);\r\n    }\r\n    .resultBoxContainer{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        margin-top: 0.5rem;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    .resultBox{\r\n        width: calc(85% - 2rem);\r\n        max-width: 35rem;\r\n        border: 3px solid white;\r\n        border-radius: 2rem;\r\n        padding: 1rem;\r\n        margin: 0;\r\n        color: white;\r\n        display: flex;\r\n        flex-direction: column;\r\n        overflow: hidden;\r\n    }\r\n    .titleResultBox{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        flex-direction: row;\r\n        width: 100%;\r\n    }\r\n    .triangle{\r\n        flex: 0 1 40px;\r\n        width: 40px;\r\n        height: 40px;\r\n        fill: lightgray;\r\n        stroke: black;\r\n        stroke-width: 1;\r\n        transform: scaleY(0.7) rotate(90deg);\r\n        //background-color is transparent\r\n        background-color: transparent;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    .triangle-true{\r\n        transform: scaleY(0.7) rotate(90deg);\r\n    }\r\n    .triangle-false{\r\n        transform: scaleX(0.7) rotate(0deg);\r\n    }\r\n</style>","<script>\r\n    export let page;\r\n    export let totalPages;\r\n    function updatePage(){\r\n        dispatch('pageUpdate', {currentPage, totalPages});\r\n    }\r\n</script>\r\n\r\n<h1>Page {page+1} of {totalPages}</h1>\r\n\r\n<style>\r\n\r\n</style>","<script>\r\n    import Database from \"../../scripts/app/database/Database\";\r\n    import DatabaseQueryResult from \"./DatabaseQueryResult.svelte\";\r\n    import DatabaseQueryPageSelect from \"./DatabaseQueryPageSelect.svelte\";\r\n    const pageSize = 10;\r\n    let updated = false;\r\n    let queries = [];\r\n    let displayedQueries = [];\r\n    let currentPage = 0;\r\n\r\n    //make a function to change the displayed queries based on page\r\n    function pickDisplayedQueries(page) {\r\n    let start = page * pageSize;\r\n    let end = start + pageSize;\r\n    //check if the end is greater than the length of the queries\r\n    if (end > queries.length) {\r\n        end = queries.length;\r\n    }\r\n    return queries.slice(start, end);\r\n    }\r\n    function update(){\r\n        updated = true;\r\n        queries = Database.getQueryResult();\r\n        displayedQueries = pickDisplayedQueries(currentPage);\r\n    }\r\n    Database.subscribeQuery({update});\r\n</script>\r\n{#if queries.length === 0 && updated}\r\n    <div class=\"results\">\r\n        <h1>No results found</h1>\r\n    </div>\r\n{:else if !updated}\r\n<div class=\"results\">\r\n    <h1>Type in a query and click search!</h1>\r\n</div>\r\n{:else}\r\n    <div class=\"results\">\r\n        <h1>{queries.length} results </h1>\r\n        <DatabaseQueryPageSelect page={currentPage} totalPages= {Math.ceil(queries.length / pageSize)}/>\r\n        <br>\r\n    </div>\r\n{/if}\r\n\r\n{#each displayedQueries as query}\r\n<DatabaseQueryResult title=\"{query.author + \": \" + query.title}\" link=\"{query.full_link}\" selftext=\"{query.selftext}\"/>\r\n{/each}\r\n\r\n\r\n<style type=\"text/scss\">\r\n    .results{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        color: white;\r\n        margin-bottom: 10px;\r\n    }   \r\n</style>","<script>\r\n    import Database from \"../scripts/app/database/Database.js\";\r\n    let queryList = Database.initialize(); //to be updated by reactivity\r\n    let totalQuery = \"\";\r\n    function queryDB(){\r\n        Database.queryDB(totalQuery, queryList);\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"searchContainer\">\r\n    <!--Make sure Academics & Standardized Testing have filterable ranges-->\r\n    <!--LoR, Interviews, and Essays are hard to define so we're not filtering them-->\r\n    <form class=\"searchForm\">\r\n        <div class=\"searchBarContainer\">\r\n            <span class=\"headingText\">Demographics</span>\r\n            <input type=\"text\" class=\"searchBar\" placeholder=\"Filter by demographics (comma delimited)\" bind:value={queryList[\"Demographics\"]}/>\r\n        </div>\r\n        <div class=\"searchBarContainer\">\r\n            <span class=\"headingText\">Major:</span>\r\n            <input type=\"text\" class=\"searchBar\" placeholder=\"Filter by major (comma delimited)\" bind:value={queryList[\"Intended Major\"]}/>\r\n        </div>\r\n        <div class=\"searchBarContainer\">\r\n            <span class=\"headingText\">Courseload:</span>  <!--Really academics-->\r\n            <input type=\"text\" class=\"searchBar\" placeholder=\"Filter by courses (comma delimited)\" bind:value={queryList[\"Academics\"]}/>\r\n        </div>\r\n        <div class=\"searchBarContainer\">\r\n            <span class=\"headingText\">Extracurriculars:</span>\r\n            <input type=\"text\" class=\"searchBar\" placeholder=\"Filter by extracurriculars (comma delimited)\" bind:value={queryList[\"Extracurriculars\"]}/>\r\n        </div>\r\n        <div class=\"searchBarContainer\">\r\n            <span class=\"headingText\">Awards:</span>\r\n            <input type=\"text\" class=\"searchBar\" placeholder=\"Filter by awards (comma delimited)\" bind:value={queryList[\"Awards\"]}/>\r\n        </div>\r\n        <div class=\"searchBarContainer\">\r\n            <span class=\"headingText\">Acceptances:</span>\r\n            <input type=\"text\" class=\"searchBar\" placeholder=\"Filter by acceptances (comma delimited)\" bind:value={queryList[\"Acceptances\"]}/>\r\n        </div>\r\n        <div class=\"searchBarContainer\">\r\n            <span class=\"headingText\">Waitlists:</span>\r\n            <input type=\"text\" class=\"searchBar\" placeholder=\"Filter by waitlists (comma delimited)\" bind:value={queryList[\"Waitlists\"]}/>\r\n        </div>\r\n        <div class=\"searchBarContainer\">\r\n            <span class=\"headingText\">Rejections:</span>\r\n            <input type=\"text\" class=\"searchBar\" placeholder=\"Filter by rejections (comma delimited)\" bind:value={queryList[\"Rejections\"]}/>\r\n        </div>\r\n        <!--This is referring to a comprehensive search of the plaintext-->\r\n        <div class=\"searchBarContainer\">\r\n            <span class=\"headingText\">Total Search:</span>\r\n            <input type=\"text\" class=\"searchBar\" placeholder=\"Filter by all data (comma delimited)\" bind:value={totalQuery}/>\r\n        </div>\r\n    </form>\r\n    <button class=\"searchButton\" on:click=\"{queryDB}\">Search</button>\r\n</div>\r\n    \r\n\r\n\r\n<style lang=\"scss\">\r\n    //TODO: fix the css mess\r\n    //center the search bar\r\n    .headingText{\r\n        color: white;\r\n        font-size: 1.35rem;\r\n        width: 16rem;\r\n    }\r\n    .searchContainer{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-top: 1rem;\r\n        width: 100%;\r\n    }\r\n    .searchForm{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        width: 100%;\r\n    }\r\n    .searchBarContainer{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        width: calc(85% - 2rem);\r\n        max-width: 35rem;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    .searchBar{\r\n        //center search text\r\n        padding: 1rem;\r\n        border: 2px solid gray;\r\n        border-radius: 3rem;\r\n        background-color: white;\r\n        margin: 0px;\r\n        margin-left: 0.5rem;\r\n        height: 2rem;\r\n        width: 100%;\r\n        max-width: 30rem;\r\n    }\r\n    .searchButton{\r\n        width: 10rem;\r\n        margin: 5px;\r\n        margin-bottom: 1rem;\r\n        border: 2px solid white;\r\n    }\r\n    .searchButton:hover{\r\n        cursor: pointer;\r\n        color: white;\r\n        background-color: black;\r\n        //transition both the color and background-color\r\n        transition: all 0.1s ease-out;\r\n    }\r\n</style>","export default class ModalHandler {\r\n    static triggerFAQ() {\r\n        this.FAQCallback();\r\n    }\r\n    static registerFAQCallback(callback) {\r\n        this.FAQCallback = callback;\r\n    }\r\n}\r\n","<script>\r\n    import ModalHandler from \"../scripts/app/modal/ModalHandler\";\r\n    function triggerModal(){\r\n        ModalHandler.triggerFAQ();\r\n    }\r\n</script>\r\n\r\n<div class=\"title-area\">\r\n    <h1>College Results Viewer</h1>\r\n    <div class=\"faqBubble\" on:click=\"{triggerModal}\"> </div>\r\n</div>\r\n\r\n\r\n\r\n<style>\r\n    h1{\r\n        text-align: center;\r\n        font-size: 3rem;\r\n        font-weight: bold;\r\n        grid-area: title;\r\n        color: rgb(230, 230, 230);\r\n        justify-self: center;\r\n        padding-bottom: 0.25rem;\r\n        grid-column: 1 / -1;\r\n    }\r\n    .title-area{\r\n        display: grid;\r\n        grid-template-columns: auto auto; \r\n        grid-template-areas: \"title faq\";\r\n        align-items: center;\r\n        padding-top: 1rem;\r\n    }\r\n    .faqBubble{\r\n        background-image: url(\"../images/faq_icon.png\");\r\n        background-position: center;\r\n        background-size: auto 3rem;\r\n        justify-self: end;\r\n        background-repeat: no-repeat;\r\n        margin-right: 1.5rem;\r\n        grid-area: faq;\r\n        filter: invert(100%);\r\n        height: 3rem;\r\n        width: 3rem;\r\n        box-sizing: border-box;\r\n        border-radius: 100%;\r\n        background-color: white;\r\n        background-blend-mode: multiply;\r\n    }\r\n    .faqBubble:hover{\r\n        cursor: pointer;\r\n        filter: invert(0%);\r\n        border: 4px solid white;\r\n    }\r\n</style>","<script>\r\n    import ModalHandler from \"../../scripts/app/modal/ModalHandler.js\";\r\n    let rendered = false;\r\n    function toggleRender(){\r\n        rendered = !rendered;\r\n    }\r\n    function toggleModal(){\r\n        ModalHandler.triggerFAQ();\r\n    }\r\n    ModalHandler.registerFAQCallback(toggleRender);\r\n</script>\r\n\r\n<div class={\"render-\" + rendered}>\r\n    <div class=\"modal-box\">\r\n        <div class=\"modal-title-box\">\r\n            <h1 class=\"modal-title\">About</h1>\r\n            <div class=\"modal-close-button\" on:click={toggleModal}> </div>\r\n        </div>\r\n        <div class = \"modal-content-box\">\r\n        <div class=\"modal-content\">\r\n            <p>\r\n                As the name implies, this is a college application results viewer for the US. \r\n                The data is sourced from <a href=\"https://www.reddit.com/r/collegeresults\" target=\"_blank\">/r/collegeresults</a>\r\n            </p>\r\n            <h3>How do I use this?</h3>\r\n            <p>\r\n               Type queries into any of the search criteria, and click search to search. \r\n               The results will be displayed below. You can switch through the pages of results,\r\n               and view the content of each post by opening the dropdown.\r\n               <br> <br>\r\n               The queries are \r\n                combined using AND logic. Commas separate multiple queries under the same search criteria. \r\n               All queries are case insensitive. Leading and trailing spaces are cut off from the query.\r\n               <br> <br>\r\n               The search criteria apply only if a heading for the query is detected (if the author of \r\n               the reddit post followed the standard template). In the cases where a heading is not \r\n               detected, you can filter by all data by a total search.\r\n               <br> <br>\r\n               An issue with direct search is that you may get unnecessary results. For example, \r\n               directly searching for 'MIT' could cause a result with 'admit' to appear. To \r\n               circumvent this, you can surround 'MIT' with spaces, and place double quotes around that \r\n               to prevent the spaces from being trimmed from the query (\" MIT \"). All queries surrounded\r\n               by quotes remain case insensitive. \r\n               <br> <br>\r\n               In some cases, you may want to search with a comma or quote. To do so, you can type a backslash\r\n               directly before to ignore it when delimiting (\\, or \\\"). \r\n            </p>\r\n            <h3>Why does this exist?</h3>\r\n            <p>\r\n                The idea seemed interesting enough! :P <br>\r\n                Of course, one could just directly search the subreddit, but hopefully this allows for \r\n                a better searching tool than Reddit search, given the multiple searching criteria options\r\n                here. There's also the advantage of being able to see posts on this page itself, rather than\r\n                redirecting to the individual post each time, and being able to see removed results.\r\n             </p>\r\n        </div>\r\n     </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<style>\r\n    h3{\r\n        margin-top: 1rem;\r\n        margin-bottom: 1rem;\r\n        font-size: 1.75rem;\r\n    }\r\n    .render-true{\r\n        position: fixed;\r\n        z-index: 1;\r\n        height: 100%;\r\n        width: 100%;\r\n        display: grid;\r\n        justify-content: center;\r\n        grid-template-columns: 80%;\r\n        grid-template-rows: 100%;\r\n        align-items: center;\r\n        background-color: rgba(0,0,0,0.75);\r\n    }\r\n    .render-false{\r\n        display: none;\r\n    }\r\n    .modal-box{\r\n        height: 70%;\r\n        width: 100%;\r\n        background-color: black;\r\n        border: 3px solid white;\r\n        border-radius: 2rem;\r\n        grid-column: 1 / -1;\r\n        grid-row: 1 / -1;\r\n        display: grid;\r\n    }\r\n    .modal-title{\r\n        text-align: center;\r\n        color: white;\r\n        font-size: 3rem;\r\n        font-weight: bold;\r\n        padding-top: 0.5rem;\r\n        padding-bottom: 0.5rem;\r\n        grid-area: title;\r\n        grid-column: 1 / -1;\r\n    }\r\n    .modal-content-box{\r\n        overflow-y: scroll;\r\n        margin-top: 1rem;\r\n        margin-bottom: 2rem;\r\n        margin-right: 1px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background: black;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #888;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: #555;\r\n    }\r\n    .modal-content{\r\n        font-size: 1.25rem;\r\n        padding-top: 0.5rem;\r\n        padding-left: 2rem;\r\n        padding-right: 2rem;\r\n        color: white;\r\n        \r\n    }\r\n    .modal-title-box{\r\n        display: grid;\r\n        grid-template-columns: auto auto;\r\n        grid-template-areas: \"title close\";\r\n        align-items: center;\r\n        justify-items: center;\r\n        padding-top: 1rem;\r\n        padding-bottom: 1rem;\r\n    }\r\n    .modal-close-button{\r\n        /* make it an x */\r\n        background-image: url(\"../images/close.png\");\r\n        height: 2rem;\r\n        width: 2rem;\r\n        background-position: center;\r\n        background-size: auto 2rem;\r\n        justify-self: end;\r\n        background-repeat: no-repeat;\r\n        margin-right: 3rem;\r\n        grid-area: close;\r\n    }\r\n    .modal-close-button:hover{\r\n        cursor: pointer;\r\n        background-color: lightcoral;\r\n        background-blend-mode: multiply;\r\n    }\r\n</style>","<script>\r\n    import Database from \"../scripts/app/database/Database.js\";\r\n    import DatabaseQueryResults from \"./DatabaseQuery/DatabaseQueryResults.svelte\";\r\n    import DatabaseSearch from \"./DatabaseSearch.svelte\";\r\n    import DatabaseTitle from \"./DatabaseTitle.svelte\";\r\nimport FaqModal from \"./FAQ/FAQModal.svelte\";\r\n    Database.importDatabase(\"data/collegeresults_simplify.json\");\r\n</script>\r\n\r\n<div class=\"body\">\r\n    <FaqModal />\r\n    <DatabaseTitle/>\r\n    <DatabaseSearch/>\r\n    <DatabaseQueryResults/>\r\n</div>\r\n\r\n<style type=\"text/scss\">\r\n//background color black\r\n    .body {\r\n        background-color: #000000;\r\n        min-height: 100%;\r\n        width: 100%;\r\n        top: 0; left: 0;\r\n    }\r\n</style>\r\n\r\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {}\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","HtmlTag","constructor","this","e","n","c","html","h","m","nodeName","t","i","innerHTML","Array","from","childNodes","length","p","d","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","DatabaseData","initialize","headers","getQueryList","queryType","comprehensiveHeaders","finalQueryType","queryList","DatabaseOrderer","orderDB","db","dbArray","orderedDB","dbObject","tabulatedPost","tabulatePost","toLowerCase","getHeader","detectedPost","substring","postArg","post","posts","detectedHeaders","header","includes","replaceAll","subheader","split","postObjects","postArray","DatabaseQuery","subscribe","subscriber","subscribers","queryDB","totalQuery","queryResult","console","log","undefined","queryString","refineQueryComma","refineQueryAllComma","sanitizedQueries","queries","endsWith","trim","startsWith","query","queryLength","j","refineQuery","refineQueryAll","refinedQueryResult","datapoint","Database","importDatabase","filePath","importJSON","reject","fetch","response","json","catch","error","orderedDb","getQueryResult","subscribeQuery","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","test","replace","unescapeTest","unescape","_","charAt","String","fromCharCode","parseInt","caret","edit","regex","opt","source","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","merge","key","arguments","prototype","hasOwnProperty","call","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","shift","invert","suffLen","currChar","slice","checkSanitizeDeprecation","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","state","inLink","token","tokens","inlineTokens","Tokenizer","src","rules","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","join","indentCodeCompensation","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","task","checked","trimRight","top","spacers","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","table","item","align","rows","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","lex","lexInline","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","Error","keepPrevChar","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","renderers","parser","unshift","marked","done","err","pending","setTimeout","message","setOptions","newDefaults","use","args","opts","childTokens","hasExtensions","pack","ext","prevRenderer","apply","prop","prevTokenizer","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","_ref","Reflect","construct","fun","thisValue","x","Func","Function","bind","concat","arr","isArray","arr2","_toConsumableArray","func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","typeErrorCreate","TypeError","_len2","_key2","thisArg","_len","_key","addToSet","set","array","lcElement","clone","object","newObject","property","lookupGetter","desc","get","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","html$1","svg$1","mathMl$1","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","_typeof","Symbol","iterator","_toConsumableArray$1","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","policyName","createHTML","html$$1","createDOMPurify","DOMPurify","version","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","ownerDocument","trustedTypesPolicy","emptyHTML","_document","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","transformCaseFunc","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","commonSvgAndHTMLElements","_forceRemove","outerHTML","remove","_removeAttribute","getAttributeNode","_initDocument","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","textContent","attributes","_isNode","_executeHook","entryPoint","currentNode","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","setAttributeNS","_sanitizeShadowDOM","shadowNode","shadowIterator","nextNode","importedNode","oldNode","returnNode","toStaticHTML","firstChild","nodeIterator","shadowroot","serializedHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","DatabaseQuerySanitizer","sanitizeTitle","DOMPurify.sanitize","sanitizeText","marked.parse","important","style","setProperty","selftext","opened","page","totalPages","currentPage","ceil","pageSize","author","full_link","iterations","updated","displayedQueries","end","pickDisplayedQueries","ModalHandler","triggerFAQ","FAQCallback","registerFAQCallback","rendered"],"mappings":"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"}